generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma"
  output  = "../src/models/zod/generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserProvider {
  userId     Int
  user       User     @relation(fields: [userId], references: [id]) 
  provider   Provider
  providerId String

  @@unique([provider, providerId])
}

model User {
  id           Int     @id @default(autoincrement())
  isBot        Boolean @default(false)
  mainProvider Provider
  quizzes Quiz[]
  providers UserProvider[]
}

model Quiz {
  id                Int            @id @default(autoincrement())
  ownerId           Int
  owner             User           @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  title             String       
  isPublic          Boolean        @default(false)
  sharedWithUserIds Int[]          @default([])
  questions         QuizQuestion[]
}

model QuizQuestion {
  id                     Int      @id @default(autoincrement())
  question               String   @db.VarChar(256)
  options                String[] /// @zod.min(1)
  correctOption          Int      /// @zod.positive()
  totalCorrectAttempts   Int      @default(0)
  totalIncorrectAttempts Int      @default(0)
  quizId                 Int
  quiz                   Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
}

enum Provider {
  Google
}